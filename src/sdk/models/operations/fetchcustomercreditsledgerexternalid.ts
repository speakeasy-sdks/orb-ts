/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Filters to a single status of ledger entry
 */
export enum FetchCustomerCreditsLedgerExternalIdEntryStatus {
    Committed = "committed",
    Pending = "pending",
}

/**
 * Filter to a single type of ledger entry
 */
export enum FetchCustomerCreditsLedgerExternalIdEntryType {
    Increment = "increment",
    Decrement = "decrement",
    ExpirationChange = "expiration_change",
    CreditBlockExpiry = "credit_block_expiry",
}

export class FetchCustomerCreditsLedgerExternalIdRequest extends SpeakeasyBase {
    /**
     * Filters to a single status of ledger entry
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=entry_status" })
    entryStatus?: FetchCustomerCreditsLedgerExternalIdEntryStatus;

    /**
     * Filter to a single type of ledger entry
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=entry_type" })
    entryType?: FetchCustomerCreditsLedgerExternalIdEntryType;

    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=external_customer_id" })
    externalCustomerId: string;

    /**
     * Filter to ledger entries that affect at least this amount
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=minimum_amount" })
    minimumAmount?: number;
}

export class FetchCustomerCreditsLedgerExternalId200ApplicationJSONPaginationMetadata extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "has_more" })
    hasMore: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "next_cursor" })
    nextCursor: string;
}

/**
 * OK
 */
export class FetchCustomerCreditsLedgerExternalId200ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: shared.CreditLedgerEntry })
    @Expose({ name: "data" })
    @Type(() => shared.CreditLedgerEntry)
    data: shared.CreditLedgerEntry[];

    @SpeakeasyMetadata()
    @Expose({ name: "pagination_metadata" })
    @Type(() => FetchCustomerCreditsLedgerExternalId200ApplicationJSONPaginationMetadata)
    paginationMetadata: FetchCustomerCreditsLedgerExternalId200ApplicationJSONPaginationMetadata;
}

export class FetchCustomerCreditsLedgerExternalIdResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    fetchCustomerCreditsLedgerExternalId200ApplicationJSONObject?: FetchCustomerCreditsLedgerExternalId200ApplicationJSON;
}
