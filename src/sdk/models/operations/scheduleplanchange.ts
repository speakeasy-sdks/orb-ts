/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Determines the timing of the plan change
 */
export enum SchedulePlanChangeRequestBodyChangeOption {
    RequestedDate = "requested_date",
    EndOfSubscriptionTerm = "end_of_subscription_term",
    Immediate = "immediate",
}

export enum SchedulePlanChangeRequestBodyPriceOverrides7ModelType {
    TieredBps = "tiered_bps",
}

export class SchedulePlanChangeRequestBodyPriceOverrides7TieredBpsConfigTiers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "bps" })
    bps: number;

    @SpeakeasyMetadata()
    @Expose({ name: "maximum_amount" })
    maximumAmount: string;

    @SpeakeasyMetadata()
    @Expose({ name: "minimum_amount" })
    minimumAmount: string;

    @SpeakeasyMetadata()
    @Expose({ name: "per_unit_maximum" })
    perUnitMaximum: string;
}

export class SchedulePlanChangeRequestBodyPriceOverrides7TieredBpsConfig extends SpeakeasyBase {
    @SpeakeasyMetadata({
        elemType: SchedulePlanChangeRequestBodyPriceOverrides7TieredBpsConfigTiers,
    })
    @Expose({ name: "tiers" })
    @Type(() => SchedulePlanChangeRequestBodyPriceOverrides7TieredBpsConfigTiers)
    tiers: SchedulePlanChangeRequestBodyPriceOverrides7TieredBpsConfigTiers[];
}

/**
 * Tiered BPS price override
 */
export class SchedulePlanChangeRequestBodyPriceOverrides7 extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * The subscription's override minimum amount for this price.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "minimum_amount" })
    minimumAmount?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "model_type" })
    modelType: SchedulePlanChangeRequestBodyPriceOverrides7ModelType;

    @SpeakeasyMetadata()
    @Expose({ name: "tiered_bps_config" })
    @Type(() => SchedulePlanChangeRequestBodyPriceOverrides7TieredBpsConfig)
    tieredBpsConfig: SchedulePlanChangeRequestBodyPriceOverrides7TieredBpsConfig;
}

export class SchedulePlanChangeRequestBodyPriceOverrides6BulkBpsConfigTiers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "bps" })
    bps: number;

    @SpeakeasyMetadata()
    @Expose({ name: "maximum_amount" })
    maximumAmount: string;

    @SpeakeasyMetadata()
    @Expose({ name: "per_unit_maximum" })
    perUnitMaximum: string;
}

export class SchedulePlanChangeRequestBodyPriceOverrides6BulkBpsConfig extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: SchedulePlanChangeRequestBodyPriceOverrides6BulkBpsConfigTiers })
    @Expose({ name: "tiers" })
    @Type(() => SchedulePlanChangeRequestBodyPriceOverrides6BulkBpsConfigTiers)
    tiers?: SchedulePlanChangeRequestBodyPriceOverrides6BulkBpsConfigTiers[];
}

export enum SchedulePlanChangeRequestBodyPriceOverrides6ModelType {
    BulkBps = "bulk_bps",
}

/**
 * Bulk BPS price override
 */
export class SchedulePlanChangeRequestBodyPriceOverrides6 extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "bulk_bps_config" })
    @Type(() => SchedulePlanChangeRequestBodyPriceOverrides6BulkBpsConfig)
    bulkBpsConfig?: SchedulePlanChangeRequestBodyPriceOverrides6BulkBpsConfig;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * The subscription's override minimum amount for this price.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "minimum_amount" })
    minimumAmount?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "model_type" })
    modelType: SchedulePlanChangeRequestBodyPriceOverrides6ModelType;
}

export class SchedulePlanChangeRequestBodyPriceOverrides5BpsConfig extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "bps" })
    bps: number;

    @SpeakeasyMetadata()
    @Expose({ name: "per_unit_maximum" })
    perUnitMaximum: string;
}

export enum SchedulePlanChangeRequestBodyPriceOverrides5ModelType {
    Bps = "bps",
}

/**
 * BPS price override
 */
export class SchedulePlanChangeRequestBodyPriceOverrides5 extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "bps_config" })
    @Type(() => SchedulePlanChangeRequestBodyPriceOverrides5BpsConfig)
    bpsConfig: SchedulePlanChangeRequestBodyPriceOverrides5BpsConfig;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * The subscription's override minimum amount for this price.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "minimum_amount" })
    minimumAmount?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "model_type" })
    modelType: SchedulePlanChangeRequestBodyPriceOverrides5ModelType;
}

export enum SchedulePlanChangeRequestBodyPriceOverrides4ModelType {
    Package = "package",
}

export class SchedulePlanChangeRequestBodyPriceOverrides4PackageConfig extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "num_units" })
    numUnits: number;

    @SpeakeasyMetadata()
    @Expose({ name: "unit_amount" })
    unitAmount: string;
}

/**
 * Package price override
 */
export class SchedulePlanChangeRequestBodyPriceOverrides4 extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * The subscription's override minimum amount for this price.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "minimum_amount" })
    minimumAmount?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "model_type" })
    modelType: SchedulePlanChangeRequestBodyPriceOverrides4ModelType;

    @SpeakeasyMetadata()
    @Expose({ name: "package_config" })
    @Type(() => SchedulePlanChangeRequestBodyPriceOverrides4PackageConfig)
    packageConfig: SchedulePlanChangeRequestBodyPriceOverrides4PackageConfig;
}

export class SchedulePlanChangeRequestBodyPriceOverrides3BulkConfigTiers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "maximum_units" })
    maximumUnits: string;

    @SpeakeasyMetadata()
    @Expose({ name: "unit_amount" })
    unitAmount: string;
}

export class SchedulePlanChangeRequestBodyPriceOverrides3BulkConfig extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: SchedulePlanChangeRequestBodyPriceOverrides3BulkConfigTiers })
    @Expose({ name: "tiers" })
    @Type(() => SchedulePlanChangeRequestBodyPriceOverrides3BulkConfigTiers)
    tiers: SchedulePlanChangeRequestBodyPriceOverrides3BulkConfigTiers[];
}

export enum SchedulePlanChangeRequestBodyPriceOverrides3ModelType {
    Bulk = "bulk",
}

/**
 * Bulk price override
 */
export class SchedulePlanChangeRequestBodyPriceOverrides3 extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "bulk_config" })
    @Type(() => SchedulePlanChangeRequestBodyPriceOverrides3BulkConfig)
    bulkConfig: SchedulePlanChangeRequestBodyPriceOverrides3BulkConfig;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * The subscription's override minimum amount for this price.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "minimum_amount" })
    minimumAmount?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "model_type" })
    modelType: SchedulePlanChangeRequestBodyPriceOverrides3ModelType;
}

export enum SchedulePlanChangeRequestBodyPriceOverrides2ModelType {
    Unit = "unit",
}

export class SchedulePlanChangeRequestBodyPriceOverrides2UnitConfig extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "unit_amount" })
    unitAmount: string;
}

/**
 * Unit price override
 */
export class SchedulePlanChangeRequestBodyPriceOverrides2 extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * The subscription's override minimum amount for this price.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "minimum_amount" })
    minimumAmount?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "model_type" })
    modelType: SchedulePlanChangeRequestBodyPriceOverrides2ModelType;

    @SpeakeasyMetadata()
    @Expose({ name: "unit_config" })
    @Type(() => SchedulePlanChangeRequestBodyPriceOverrides2UnitConfig)
    unitConfig: SchedulePlanChangeRequestBodyPriceOverrides2UnitConfig;
}

export enum SchedulePlanChangeRequestBodyPriceOverrides1ModelType {
    Tiered = "tiered",
}

export class SchedulePlanChangeRequestBodyPriceOverrides1TieredConfigTiers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "first_unit" })
    firstUnit?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_unit" })
    lastUnit?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "unit_amount" })
    unitAmount?: string;
}

export class SchedulePlanChangeRequestBodyPriceOverrides1TieredConfig extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: SchedulePlanChangeRequestBodyPriceOverrides1TieredConfigTiers })
    @Expose({ name: "tiers" })
    @Type(() => SchedulePlanChangeRequestBodyPriceOverrides1TieredConfigTiers)
    tiers?: SchedulePlanChangeRequestBodyPriceOverrides1TieredConfigTiers[];
}

/**
 * Tiered price override
 */
export class SchedulePlanChangeRequestBodyPriceOverrides1 extends SpeakeasyBase {
    /**
     * price_id
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * The subscription's override minimum amount for this price.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "minimum_amount" })
    minimumAmount?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "model_type" })
    modelType: SchedulePlanChangeRequestBodyPriceOverrides1ModelType;

    @SpeakeasyMetadata()
    @Expose({ name: "tiered_config" })
    @Type(() => SchedulePlanChangeRequestBodyPriceOverrides1TieredConfig)
    tieredConfig: SchedulePlanChangeRequestBodyPriceOverrides1TieredConfig;
}

export class SchedulePlanChangeRequestBody extends SpeakeasyBase {
    /**
     * Reset billing periods to be aligned with the plan change’s effective date.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "align_billing_with_plan_change_date" })
    alignBillingWithPlanChangeDate?: boolean;

    /**
     * The date that the plan change should take effect. This parameter can only be passed if the `change_option` is `requested_date`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "change_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    changeDate?: Date;

    /**
     * Determines the timing of the plan change
     */
    @SpeakeasyMetadata()
    @Expose({ name: "change_option" })
    changeOption: SchedulePlanChangeRequestBodyChangeOption;

    /**
     * Redemption code to be used for this subscription. If the coupon cannot be found by its redemption code, or cannot be redeemed, an error response will be returned and the plan change will not be scheduled.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "coupon_redemption_code" })
    couponRedemptionCode?: string;

    /**
     * The external_plan_id of the plan that the given subscription should be switched to. Note that either this property or `plan_id` must be specified.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "external_plan_id" })
    externalPlanId?: string;

    /**
     * The subscription's override minimum amount for the plan.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "minimum_amount" })
    minimumAmount?: string;

    /**
     * The plan that the given subscription should be switched to. Note that either this property or `external_plan_id` must be specified.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "plan_id" })
    planId?: string;

    /**
     * Optionally provide a list of overrides for prices on the plan
     */
    @SpeakeasyMetadata()
    @Expose({ name: "price_overrides" })
    priceOverrides?: any[];
}

export class SchedulePlanChangeRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody?: SchedulePlanChangeRequestBody;

    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=subscription_id" })
    subscriptionId: string;
}

export class SchedulePlanChangeResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    subscription?: shared.Subscription;
}
