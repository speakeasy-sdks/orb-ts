/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

/**
 * Determines the timing of subscription cancellation
 */
export enum CancelSubscriptionRequestBodyCancelOption {
    Immediate = "immediate",
    EndOfSubscriptionTerm = "end_of_subscription_term",
    RequestedDate = "requested_date",
}

export class CancelSubscriptionRequestBody extends SpeakeasyBase {
    /**
     * Determines the timing of subscription cancellation
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cancel_option" })
    cancelOption: CancelSubscriptionRequestBodyCancelOption;

    /**
     * The date that the cancellation should take effect. This parameter can only be passed if the `cancel_option` is `requested_date`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cancellation_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    cancellationDate?: Date;
}

export class CancelSubscriptionRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody?: CancelSubscriptionRequestBody;

    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=subscription_id" })
    subscriptionId: string;
}

export class CancelSubscriptionResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    subscription?: shared.Subscription;
}
