/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CreditNoteLineItem } from "./creditnotelineitem";
import { Discount } from "./discount";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The Customer who is receiving this credit note.
 */
export class CreditNoteCustomer extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "external_customer_id" })
    externalCustomerId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;
}

/**
 * A reason for this credit note, which can be one of "Duplicate", "Fraudulent", "Order change", "Product unsatisfactory"
 */
export enum CreditNoteReason {
    Duplicate = "Duplicate",
    Fraudulent = "Fraudulent",
    OrderChange = "Order change",
    ProductUnsatisfactory = "Product unsatisfactory",
}

/**
 * Describing if this is an `adjustment` or a `refund`
 */
export enum CreditNoteType {
    Refund = "refund",
    Adjustment = "adjustment",
}

export class CreditNote extends SpeakeasyBase {
    /**
     * The creation time of the resource in Orb.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt: Date;

    /**
     * The unique identifier for credit notes.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "credit_note_number" })
    creditNoteNumber: string;

    /**
     * A URL to a PDF version of this credit note.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "credit_note_pdf" })
    creditNotePdf: string;

    /**
     * The Customer who is receiving this credit note.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "customer" })
    @Type(() => CreditNoteCustomer)
    customer: CreditNoteCustomer;

    /**
     * Any discounts applied on the original invoice.
     */
    @SpeakeasyMetadata({ elemType: Discount })
    @Expose({ name: "discounts" })
    @Type(() => Discount)
    discounts: Discount[];

    /**
     * The unique id of this credit note.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * The Invoice resource that this credit note is applied to.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "invoice_id" })
    invoiceId: string;

    /**
     * All of the line items associated with this credit note
     */
    @SpeakeasyMetadata({ elemType: CreditNoteLineItem })
    @Expose({ name: "line_items" })
    @Type(() => CreditNoteLineItem)
    lineItems: CreditNoteLineItem[];

    /**
     * An optional memo supplied on the credit note.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "memo" })
    memo: string;

    /**
     * Any credited amount from the applied minimum on the invoice.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "minimum_amount_refunded" })
    minimumAmountRefunded: string;

    /**
     * A reason for this credit note, which can be one of "Duplicate", "Fraudulent", "Order change", "Product unsatisfactory"
     */
    @SpeakeasyMetadata()
    @Expose({ name: "reason" })
    reason: CreditNoteReason;

    /**
     * The total prior to any creditable invoice-level discounts or minimums
     */
    @SpeakeasyMetadata()
    @Expose({ name: "subtotal" })
    subtotal: string;

    /**
     * The total including creditable invoice-level discounts or minimums, and tax
     */
    @SpeakeasyMetadata()
    @Expose({ name: "total" })
    total: string;

    /**
     * Describing if this is an `adjustment` or a `refund`
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: CreditNoteType;

    /**
     * The time when the credit note was voided in Orb, if applicable.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "voided_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    voidedAt: Date;
}
